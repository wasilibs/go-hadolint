diff --git a/cabal.project.freeze b/cabal.project.freeze
deleted file mode 100644
index 9e89a0c..0000000
--- a/cabal.project.freeze
+++ /dev/null
@@ -1,153 +0,0 @@
-active-repositories: hackage.haskell.org:merge
-constraints: any.Cabal ==3.10.2.0,
-             any.Cabal-syntax ==3.10.2.0,
-             any.Diff ==0.5,
-             any.HUnit ==1.6.2.0,
-             any.HsYAML ==0.2.1.3,
-             HsYAML -exe,
-             any.OneTuple ==0.4.1.1,
-             any.QuickCheck ==2.14.3,
-             QuickCheck -old-random +templatehaskell,
-             any.ShellCheck ==0.10.0,
-             any.StateVar ==1.2.2,
-             any.aeson ==2.2.1.0,
-             aeson +ordered-keymap,
-             any.ansi-terminal ==1.1.1,
-             ansi-terminal -example,
-             any.ansi-terminal-types ==1.1,
-             any.array ==0.5.6.0,
-             any.assoc ==1.1,
-             assoc +tagged,
-             any.attoparsec ==0.14.4,
-             attoparsec -developer,
-             any.base ==4.19.1.0,
-             any.base-compat ==0.13.1,
-             any.base-orphans ==0.9.1,
-             any.basement ==0.0.16,
-             any.bifunctors ==5.6.2,
-             bifunctors +tagged,
-             any.binary ==0.8.9.1,
-             any.bytestring ==0.12.1.0,
-             any.call-stack ==0.4.0,
-             any.case-insensitive ==1.2.1.0,
-             any.colour ==2.3.6,
-             any.colourista ==0.1.0.2,
-             any.commutative-semigroups ==0.2,
-             any.comonad ==5.0.8,
-             comonad +containers +distributive +indexed-traversable,
-             any.containers ==0.6.8,
-             any.contravariant ==1.5.5,
-             contravariant +semigroups +statevar +tagged,
-             any.cryptonite ==0.30,
-             cryptonite -check_alignment +integer-gmp -old_toolchain_inliner +support_aesni +support_deepseq -support_pclmuldq +support_rdrand -support_sse +use_target_attributes,
-             any.data-default ==0.7.1.1,
-             any.data-default-class ==0.1.2.0,
-             any.data-default-instances-containers ==0.0.1,
-             any.data-default-instances-dlist ==0.0.1,
-             any.data-default-instances-old-locale ==0.0.1,
-             any.data-fix ==0.3.2,
-             any.deepseq ==1.5.0.0,
-             any.directory ==1.3.8.1,
-             any.distributive ==0.6.2.1,
-             distributive +semigroups +tagged,
-             any.dlist ==1.0,
-             dlist -werror,
-             any.email-validate ==2.3.2.20,
-             any.exceptions ==0.10.7,
-             any.fgl ==5.8.2.0,
-             fgl +containers042,
-             any.filepath ==1.4.200.1,
-             any.foldl ==1.4.16,
-             any.generically ==0.1.1,
-             any.ghc-bignum ==1.3,
-             any.ghc-boot-th ==9.8.2,
-             any.ghc-prim ==0.11.0,
-             any.gitrev ==1.3.1,
-             hadolint +static,
-             any.hashable ==1.4.4.0,
-             hashable +integer-gmp -random-initial-seed,
-             any.haskell-lexer ==1.1.1,
-             any.hspec ==2.11.8,
-             any.hspec-core ==2.11.8,
-             any.hspec-discover ==2.11.8,
-             any.hspec-expectations ==0.8.4,
-             any.ilist ==0.4.0.1,
-             any.indexed-traversable ==0.1.3,
-             any.indexed-traversable-instances ==0.1.1.2,
-             any.integer-conversion ==0.1.0.1,
-             any.integer-gmp ==1.1,
-             any.integer-logarithms ==1.0.3.1,
-             integer-logarithms -check-bounds +integer-gmp,
-             any.language-docker ==13.0.0,
-             any.megaparsec ==9.6.1,
-             megaparsec -dev,
-             any.memory ==0.18.0,
-             memory +support_bytestring +support_deepseq,
-             any.monoid-subclasses ==1.2.5,
-             any.mtl ==2.3.1,
-             any.network-uri ==2.6.4.2,
-             any.old-locale ==1.0.0.7,
-             any.optparse-applicative ==0.18.1.0,
-             optparse-applicative +process,
-             any.os-string ==2.0.2,
-             any.parallel ==3.2.2.0,
-             any.parsec ==3.1.17.0,
-             any.parser-combinators ==1.3.0,
-             parser-combinators -dev,
-             any.pretty ==1.1.3.6,
-             any.prettyprinter ==1.7.1,
-             prettyprinter -buildreadme +text,
-             any.prettyprinter-ansi-terminal ==1.1.3,
-             any.primes ==0.2.1.0,
-             any.primitive ==0.9.0.0,
-             any.process ==1.6.18.0,
-             any.profunctors ==5.6.2,
-             any.quickcheck-io ==0.2.0,
-             any.random ==1.2.1.2,
-             any.regex-base ==0.94.0.2,
-             any.regex-tdfa ==1.3.2.2,
-             regex-tdfa +doctest -force-o2,
-             any.rts ==1.0.2,
-             any.scientific ==0.3.7.0,
-             scientific -bytestring-builder -integer-simple,
-             any.semialign ==1.3,
-             semialign +semigroupoids,
-             any.semigroupoids ==6.0.0.1,
-             semigroupoids +comonad +containers +contravariant +distributive +tagged +unordered-containers,
-             any.semver ==0.4.0.1,
-             any.silently ==1.2.5.3,
-             any.spdx ==1.0.0.4,
-             any.split ==0.2.5,
-             any.splitmix ==0.1.0.5,
-             splitmix -optimised-mixer,
-             any.stm ==2.5.2.1,
-             any.strict ==0.5,
-             any.tagged ==0.8.8,
-             tagged +deepseq +transformers,
-             any.template-haskell ==2.21.0.0,
-             any.text ==2.1.1,
-             any.text-iso8601 ==0.1,
-             any.text-short ==0.1.5,
-             text-short -asserts,
-             any.tf-random ==0.5,
-             any.th-abstraction ==0.6.0.0,
-             any.th-compat ==0.1.5,
-             any.these ==1.2,
-             any.time ==1.12.2,
-             any.time-compat ==1.9.6.1,
-             time-compat -old-locale,
-             any.timerep ==2.1.0.0,
-             any.transformers ==0.6.1.0,
-             any.transformers-compat ==0.7.2,
-             transformers-compat -five +five-three -four +generic-deriving +mtl -three -two,
-             any.unix ==2.8.4.0,
-             any.unordered-containers ==0.2.20,
-             unordered-containers -debug,
-             any.uuid-types ==1.0.5.1,
-             any.vector ==0.13.1.0,
-             vector +boundschecks -internalchecks -unsafechecks -wall,
-             any.vector-stream ==0.1.0.1,
-             any.void ==0.7.3,
-             void -safe,
-             any.witherable ==0.4.2
-index-state: hackage.haskell.org 2024-04-24T18:33:18Z
diff --git a/hadolint.cabal b/hadolint.cabal
index 7e6d01a..8ab4241 100644
--- a/hadolint.cabal
+++ b/hadolint.cabal
@@ -35,7 +35,6 @@ library
       Hadolint.Formatter
       Hadolint.Formatter.Checkstyle
       Hadolint.Formatter.Codacy
-      Hadolint.Formatter.Codeclimate
       Hadolint.Formatter.Format
       Hadolint.Formatter.Gnu
       Hadolint.Formatter.Json
@@ -141,7 +140,6 @@ library
     , bytestring
     , colourista
     , containers
-    , cryptonite
     , data-default
     , deepseq >=1.4.4
     , directory >=1.3.0
@@ -186,7 +184,7 @@ executable hadolint
       StrictData
       TemplateHaskell
       TupleSections
-  ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints -optP-Wno-nonportable-include-path -flate-dmd-anal -O2 -threaded -rtsopts "-with-rtsopts=-N5 -A4m"
+  ghc-options: -Wall -Wcompat -Wincomplete-record-updates -Wincomplete-uni-patterns -Wredundant-constraints -optP-Wno-nonportable-include-path -flate-dmd-anal -O2
   build-depends:
       base >=4.8 && <5
     , containers
@@ -198,7 +196,7 @@ executable hadolint
     , prettyprinter >=1.7.0
     , text
   if flag(static) && !(os(osx))
-    ld-options: -static -pthread
+    ld-options: -static
   default-language: GHC2021
 
 test-suite hadolint-unit-tests
diff --git a/src/Hadolint/Formatter.hs b/src/Hadolint/Formatter.hs
index 88dabe9..7a72dff 100644
--- a/src/Hadolint/Formatter.hs
+++ b/src/Hadolint/Formatter.hs
@@ -11,7 +11,6 @@ import Hadolint.Formatter.Format
 import Language.Docker.Parser (DockerfileError)
 import qualified Hadolint.Formatter.Checkstyle as FormatCheckstyle
 import qualified Hadolint.Formatter.Codacy as FormatCodacy
-import qualified Hadolint.Formatter.Codeclimate as FormatCodeclimate
 import qualified Hadolint.Formatter.Gnu as FormatGnu
 import qualified Hadolint.Formatter.Json as FormatJson
 import qualified Hadolint.Formatter.Sarif as FormatSarif
@@ -30,8 +29,6 @@ printResults format nocolor filePathInReport allResults =
   case format of
     Checkstyle -> FormatCheckstyle.printResults allResults filePathInReport
     Codacy -> FormatCodacy.printResults allResults
-    CodeclimateJson -> FormatCodeclimate.printResults allResults
-    GitLabCodeclimateJson -> FormatCodeclimate.printGitLabResults allResults
     Gnu -> FormatGnu.printResults allResults
     Json -> FormatJson.printResults allResults
     Sarif -> FormatSarif.printResults allResults
diff --git a/src/Hadolint/Formatter/Codeclimate.hs b/src/Hadolint/Formatter/Codeclimate.hs
deleted file mode 100644
index e398d47..0000000
--- a/src/Hadolint/Formatter/Codeclimate.hs
+++ /dev/null
@@ -1,139 +0,0 @@
-module Hadolint.Formatter.Codeclimate
-  ( printResults,
-    printGitLabResults,
-    formatResult,
-    formatGitLabResult,
-  )
-where
-
-import qualified Control.Foldl as Foldl
-import Crypto.Hash (Digest, SHA1 (..), hash)
-import Data.Aeson hiding (Result)
-import qualified Data.ByteString.Lazy as B
-import Data.Sequence (Seq)
-import qualified Data.Text as Text
-import GHC.Generics
-import Hadolint.Formatter.Format (Result (..), errorPosition)
-import Hadolint.Rule (CheckFailure (..), DLSeverity (..), RuleCode (..))
-import Text.Megaparsec (TraversableStream)
-import Text.Megaparsec.Error
-import Text.Megaparsec.Pos (sourceColumn, sourceLine, sourceName, unPos)
-import Text.Megaparsec.Stream (VisualStream)
-
-data Issue = Issue
-  { checkName :: Text.Text,
-    description :: Text.Text,
-    location :: Location,
-    impact :: Text.Text
-  }
-
-data FingerprintIssue = FingerprintIssue
-  { issue :: Issue,
-    fingerprint :: Digest SHA1
-  }
-
-data Location
-  = LocLine
-      Text.Text
-      Int
-  | LocPos
-      Text.Text
-      Pos
-
-instance ToJSON Location where
-  toJSON (LocLine path l) = object ["path" .= path, "lines" .= object ["begin" .= l, "end" .= l]]
-  toJSON (LocPos path pos) =
-    object ["path" .= path, "positions" .= object ["begin" .= pos, "end" .= pos]]
-
-data Pos = Pos
-  { line :: Int,
-    column :: Int
-  }
-  deriving (Generic)
-
-instance ToJSON Pos
-
-instance ToJSON Issue where
-  toJSON Issue {..} =
-    object
-      [ "type" .= ("issue" :: Text.Text),
-        "check_name" .= checkName,
-        "description" .= description,
-        "categories" .= (["Bug Risk"] :: [Text.Text]),
-        "location" .= location,
-        "severity" .= impact
-      ]
-
-instance ToJSON FingerprintIssue where
-  toJSON FingerprintIssue {..} =
-    object
-      [ "type" .= ("issue" :: Text.Text),
-        "fingerprint" .= show fingerprint,
-        "check_name" .= checkName issue,
-        "description" .= description issue,
-        "categories" .= (["Bug Risk"] :: [Text.Text]),
-        "location" .= location issue,
-        "severity" .= impact issue
-      ]
-
-errorToIssue :: (VisualStream s, TraversableStream s, ShowErrorComponent e) => ParseErrorBundle s e -> Issue
-errorToIssue err =
-  Issue
-    { checkName = "DL1000",
-      description = Text.pack $ errorBundlePretty err,
-      location = LocPos (Text.pack $ sourceName pos) Pos {..},
-      impact = severityText DLErrorC
-    }
-  where
-    pos = errorPosition err
-    line = unPos (sourceLine pos)
-    column = unPos (sourceColumn pos)
-
-checkToIssue :: Text.Text -> CheckFailure -> Issue
-checkToIssue fileName CheckFailure {..} =
-  Issue
-    { checkName = unRuleCode code,
-      description = message,
-      location = LocLine fileName line,
-      impact = severityText severity
-    }
-
-severityText :: DLSeverity -> Text.Text
-severityText severity =
-  case severity of
-    DLErrorC -> "blocker"
-    DLWarningC -> "major"
-    DLInfoC -> "info"
-    DLStyleC -> "minor"
-    _ -> ""
-
-generateFingerprint :: Issue -> Digest SHA1
-generateFingerprint = hash . B.toStrict . encode
-
-issueToFingerprintIssue :: Issue -> FingerprintIssue
-issueToFingerprintIssue i =
-  FingerprintIssue
-    { issue = i,
-      fingerprint = generateFingerprint i
-    }
-
-formatResult :: (VisualStream s, TraversableStream s, ShowErrorComponent e) => Result s e -> Seq Issue
-formatResult (Result filename errors checks) = (errorToIssue <$> errors) <> (checkToIssue filename <$> checks)
-
-formatGitLabResult :: (VisualStream s, TraversableStream s, ShowErrorComponent e) => Result s e -> Seq FingerprintIssue
-formatGitLabResult result = issueToFingerprintIssue <$> formatResult result
-
-printResult :: (VisualStream s, TraversableStream s, ShowErrorComponent e) => Result s e -> IO ()
-printResult result = mapM_ output (formatResult result)
-  where
-    output value = do
-      B.putStr (encode value)
-      B.putStr (B.singleton 0x00)
-
-printResults :: (VisualStream s, TraversableStream s, ShowErrorComponent e, Foldable f) => f (Result s e) -> IO ()
-printResults = mapM_ printResult
-
-printGitLabResults :: (Foldable f, VisualStream s, TraversableStream s, ShowErrorComponent e) => f (Result s e) -> IO ()
-printGitLabResults results = B.putStr . encode $ flattened
-  where
-    flattened = Foldl.fold (Foldl.premap formatGitLabResult Foldl.mconcat) results
